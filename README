


Unzip the plugin into /app/plugins

run /app/plugins/uploader/config/uploader.sql as MySQL Query

include jquery and jquery-ui in your layout

include /app/css/uploader.css in your layout

Edit /app/plugins/uploader/config/uploader_config.php

Add to your model(s) (Replace {AliasName} by the Alias you configured in uploader_config.php):

	var $hasMany (or $hasOne) = array(
		'{AliasName}' => array(
			'className' => 'Upload',
			'foreignKey' => 'foreign_key',
			'dependent' => true,
			'order' => array(
				'{AliasName}.pos' => 'ASC'
			),
			'conditions' => array(
				'{AliasName}.alias' => '{AliasName}',
				'{AliasName}.model' => $this->name
			)
		)
	);
	
	function beforeDelete(){
		App::import('Model', 'Uploader.Upload');
		$Upload = new Upload();
		$Upload->delete_upload_files($this->name, $this->id);
		return (true);
	}
	
	function afterSave(){
		App::import('Model', 'Uploader.Upload');
		$Upload = new Upload();

		foreach ($this->hasMany as $alias => $dummy){
			$Upload->save_pending($this->name, $alias, $this->id);
		}
		foreach ($this->hasOne as $alias => $dummy){
			$Upload->save_pending($this->name, $alias, $this->id);
		}

		return (true);
	}


Load Uploader Helper in your (App)Controller:

	var $helpers = array(..., 'Uploader.Uplhlp', ...);


Call Element(s) in your view:

	echo $this->element('upload' | 'list' | 'uploadlist', array(
		'plugin' => 'uploader',
		'alias' => '{AliasName}'
	));
	
